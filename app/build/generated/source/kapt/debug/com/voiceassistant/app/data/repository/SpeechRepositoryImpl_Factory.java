// Generated by Dagger (https://dagger.dev).
package com.voiceassistant.app.data.repository;

import android.content.Context;
import com.voiceassistant.app.data.api.OpenAiApi;
import com.voiceassistant.app.data.api.WhisperApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class SpeechRepositoryImpl_Factory implements Factory<SpeechRepositoryImpl> {
  private final Provider<Context> contextProvider;

  private final Provider<OpenAiApi> openAiApiProvider;

  private final Provider<WhisperApi> whisperApiProvider;

  public SpeechRepositoryImpl_Factory(Provider<Context> contextProvider,
      Provider<OpenAiApi> openAiApiProvider, Provider<WhisperApi> whisperApiProvider) {
    this.contextProvider = contextProvider;
    this.openAiApiProvider = openAiApiProvider;
    this.whisperApiProvider = whisperApiProvider;
  }

  @Override
  public SpeechRepositoryImpl get() {
    return newInstance(contextProvider.get(), openAiApiProvider.get(), whisperApiProvider.get());
  }

  public static SpeechRepositoryImpl_Factory create(Provider<Context> contextProvider,
      Provider<OpenAiApi> openAiApiProvider, Provider<WhisperApi> whisperApiProvider) {
    return new SpeechRepositoryImpl_Factory(contextProvider, openAiApiProvider, whisperApiProvider);
  }

  public static SpeechRepositoryImpl newInstance(Context context, OpenAiApi openAiApi,
      WhisperApi whisperApi) {
    return new SpeechRepositoryImpl(context, openAiApi, whisperApi);
  }
}
