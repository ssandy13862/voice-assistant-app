// Generated by Dagger (https://dagger.dev).
package com.voiceassistant.app.domain.usecase;

import com.voiceassistant.app.domain.repository.FaceDetectionRepository;
import com.voiceassistant.app.domain.repository.SpeechRepository;
import com.voiceassistant.app.domain.repository.VadRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class VoiceAssistantUseCase_Factory implements Factory<VoiceAssistantUseCase> {
  private final Provider<FaceDetectionRepository> faceDetectionRepositoryProvider;

  private final Provider<VadRepository> vadRepositoryProvider;

  private final Provider<SpeechRepository> speechRepositoryProvider;

  public VoiceAssistantUseCase_Factory(
      Provider<FaceDetectionRepository> faceDetectionRepositoryProvider,
      Provider<VadRepository> vadRepositoryProvider,
      Provider<SpeechRepository> speechRepositoryProvider) {
    this.faceDetectionRepositoryProvider = faceDetectionRepositoryProvider;
    this.vadRepositoryProvider = vadRepositoryProvider;
    this.speechRepositoryProvider = speechRepositoryProvider;
  }

  @Override
  public VoiceAssistantUseCase get() {
    return newInstance(faceDetectionRepositoryProvider.get(), vadRepositoryProvider.get(), speechRepositoryProvider.get());
  }

  public static VoiceAssistantUseCase_Factory create(
      Provider<FaceDetectionRepository> faceDetectionRepositoryProvider,
      Provider<VadRepository> vadRepositoryProvider,
      Provider<SpeechRepository> speechRepositoryProvider) {
    return new VoiceAssistantUseCase_Factory(faceDetectionRepositoryProvider, vadRepositoryProvider, speechRepositoryProvider);
  }

  public static VoiceAssistantUseCase newInstance(FaceDetectionRepository faceDetectionRepository,
      VadRepository vadRepository, SpeechRepository speechRepository) {
    return new VoiceAssistantUseCase(faceDetectionRepository, vadRepository, speechRepository);
  }
}
