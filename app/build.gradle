plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

// 讀取敏感資訊
def secretsPropertiesFile = rootProject.file("secrets.properties")
def secretsProperties = new Properties()
if (secretsPropertiesFile.exists()) {
    secretsProperties.load(new FileInputStream(secretsPropertiesFile))
}

android {
    namespace 'com.voiceassistant.app'
    compileSdk 34

    defaultConfig {
        applicationId "com.voiceassistant.app"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // 安全地讀取 API Keys
        buildConfigField "String", "OPENAI_API_KEY", "\"${secretsProperties.getProperty('OPENAI_API_KEY', 'your_openai_api_key_here')}\""
        buildConfigField "String", "WHISPER_BASE_URL", "\"${secretsProperties.getProperty('WHISPER_BASE_URL', 'https://api.openai.com/v1/')}\""

        // 添加native library支持
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86_64'
        }
        
        // 外部原生庫構建配置
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++17', '-frtti', '-fexceptions'
                arguments '-DANDROID_STL=c++_shared'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    
    kotlinOptions {
        jvmTarget = '1.8'
    }
    
    buildFeatures {
        viewBinding true
        dataBinding true
        buildConfig = true
    }

    // 外部原生庫構建配置
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }

    packagingOptions {
        pickFirst '**/libc++_shared.so'
        pickFirst '**/libjsc.so'
        pickFirst '**/libwhisper.so'
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    
    // Architecture Components
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    implementation 'androidx.fragment:fragment-ktx:1.6.2'
    implementation 'androidx.activity:activity-ktx:1.8.2'
    
    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.7.5'
    
    // Dependency Injection - Hilt
    implementation 'com.google.dagger:hilt-android:2.48.1'
    kapt 'com.google.dagger:hilt-compiler:2.48.1'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.7.3"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3'
    
    // Network
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.12.0'
    
    // Google ML Kit
    implementation 'com.google.mlkit:face-detection:16.1.5'
    implementation 'androidx.camera:camera-core:1.3.1'
    implementation 'androidx.camera:camera-camera2:1.3.1'
    implementation 'androidx.camera:camera-lifecycle:1.3.1'
    implementation 'androidx.camera:camera-view:1.3.1'
    
    // Audio Processing
    implementation 'com.github.squti:Android-Wave-Recorder:1.7.0'
    
    // ONNX Runtime for Silero VAD
    implementation 'com.microsoft.onnxruntime:onnxruntime-android:1.16.3'
    
    // 本地音頻處理和 VAD (移除有問題的依賴)
    // implementation 'com.github.pjmike:AudioVisualizer:1.0.2'
    
    // Permissions
    implementation 'com.github.permissions-dispatcher:permissionsdispatcher:4.9.2'
    kapt 'com.github.permissions-dispatcher:permissionsdispatcher-processor:4.9.2'
    
    // UI Components
    implementation 'com.airbnb.android:lottie:6.2.0'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    
    // Room Database
    implementation 'androidx.room:room-runtime:2.6.1'
    implementation 'androidx.room:room-ktx:2.6.1'
    kapt 'androidx.room:room-compiler:2.6.1'
    
    // Audio visualization
    implementation 'com.github.alxrm:audiowave-progressbar:0.9.2'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.48.1'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.48.1'
}
